#!/usr/bin/env bash
#
# Summary: Set or show the local application-specific nvim version
#
# Usage: nvimenv local <version>
#        nvimenv local --unset
#
# Sets the local application-specific nvim version by writing the
# version name to a file named `.nvim-version'.
#
# When you run a nvim command, nvimenv will look for a `.nvim-version'
# file in the current directory and each parent directory. If no such
# file is found in the tree, nvimenv will use the global nvim version
# specified with `nvimenv global'. A version specified with the
# `NVIMENV_VERSION' environment variable takes precedence over local
# and global versions.
#
# For backwards compatibility, nvimenv will also read version
# specifications from `.nvimenv-version' files, but a `.nvim-version'
# file in the same directory takes precedence.
#
# <version> should be a string matching a nvim version known to nvimenv.
# The special version string `system' will use your default system nvim.
# Run `nvimenv versions' for a list of available nvim versions.

set -e
[ -n "$NVIMENV_DEBUG" ] && set -x

# Provide nvimenv completions
if [ "$1" = "--complete" ]; then
  echo --unset
  echo system
  exec nvimenv-versions --bare
fi

NVIMENV_VERSION="$1"

if [ "$NVIMENV_VERSION" = "--unset" ]; then
  rm -f .nvimenv-version
elif [ -n "$NVIMENV_VERSION" ]; then
  nvimenv-version-file-write .nvimenv-version "$NVIMENV_VERSION"
else
  if version_file="$(nvimenv-version-file "$PWD")"; then
    nvimenv-version-file-read "$version_file"
  else
    echo "nvimenv: no local version configured for this directory" >&2
    exit 1
  fi
fi
